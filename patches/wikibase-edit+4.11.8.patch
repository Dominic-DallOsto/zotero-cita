diff --git a/node_modules/wikibase-edit/lib/claim/get_time_object.js b/node_modules/wikibase-edit/lib/claim/get_time_object.js
index 790da70..a2d6cd9 100644
--- a/node_modules/wikibase-edit/lib/claim/get_time_object.js
+++ b/node_modules/wikibase-edit/lib/claim/get_time_object.js
@@ -15,6 +15,7 @@ module.exports = value => {
     // Drop milliseconds from ISO time strings as those aren't represented in Wikibase anyway
     // ex: '2019-04-01T00:00:00.000Z' -> '2019-04-01T00:00:00Z'
     .replace('.000Z', 'Z')
+    .replace(/^\+/, '')
   if (precision == null) precision = getPrecision(time)
   const timeStringBase = getTimeStringBase(time, precision)
   return getPrecisionTimeObject(timeStringBase, precision, calendarmodel)
diff --git a/node_modules/wikibase-edit/lib/datatype_tests.js b/node_modules/wikibase-edit/lib/datatype_tests.js
index 11e9b30..c383ed4 100644
--- a/node_modules/wikibase-edit/lib/datatype_tests.js
+++ b/node_modules/wikibase-edit/lib/datatype_tests.js
@@ -35,7 +35,18 @@ module.exports = {
     if (sign === '+' && year.length <= 5) {
       try {
         time = time.replace(/^\+/, '')
-        new Date(time).toISOString()
+        let isoTime = time;
+        // ISO validation would fail if either date or month are 0
+        // Replace date or date and month digits with 01
+        // if precision is less than 11 or 10, respectively
+        if (precision != null) {
+          if (precision < 10) {
+            isoTime = isoTime.replace(/^(\d{4})-\d{1,2}-\d{1,2}/, '$1-01-01')
+          } else if (precision < 11) {
+            isoTime = isoTime.replace(/^(\d{4}-\d{1,2})-\d{1,2}/, '$1-01')
+          }
+        }
+        new Date(isoTime).toISOString()
       } catch (err) {
         return false
       }
diff --git a/node_modules/wikibase-edit/lib/entity/build_claim.js b/node_modules/wikibase-edit/lib/entity/build_claim.js
index 8b1ea30..73df90c 100644
--- a/node_modules/wikibase-edit/lib/entity/build_claim.js
+++ b/node_modules/wikibase-edit/lib/entity/build_claim.js
@@ -42,7 +42,7 @@ const fullClaimBuilder = params => {
     claim = builders.specialSnaktype(property, snaktype)
   } else {
     // In case of a rich value (monolingual text, quantity, or globe coordinate)
-    if (value == null && (claimData.text || claimData.amount || claimData.latitude)) {
+    if (value == null && (claimData.text || claimData.amount || claimData.latitude || claimData.time)) {
       value = claimData
     }
     validate.snakValue(property, datatype, value)
diff --git a/node_modules/wikibase-edit/lib/properties/fetch_properties_datatypes.js b/node_modules/wikibase-edit/lib/properties/fetch_properties_datatypes.js
index 6693bca..b059f25 100644
--- a/node_modules/wikibase-edit/lib/properties/fetch_properties_datatypes.js
+++ b/node_modules/wikibase-edit/lib/properties/fetch_properties_datatypes.js
@@ -23,7 +23,8 @@ module.exports = async (config, propertyIds = []) => {
 
   const urls = WBK(instance).getManyEntities({ ids: missingPropertyIds, props: 'info' })
 
-  const responses = await Promise.all(urls.map(getJson))
+  const headers = { 'user-agent': config.userAgent }
+  const responses = await Promise.all(urls.map((url) => getJson(url, { headers })))
   const responsesEntities = responses.map(parseResponse)
   const allEntities = Object.assign(...responsesEntities)
   missingPropertyIds.forEach(addMissingProperty(allEntities, properties))
diff --git a/node_modules/wikibase-edit/lib/request/login.js b/node_modules/wikibase-edit/lib/request/login.js
index 7bae86f..059c03e 100644
--- a/node_modules/wikibase-edit/lib/request/login.js
+++ b/node_modules/wikibase-edit/lib/request/login.js
@@ -42,6 +42,11 @@ const getSessionCookies = (loginUrl, config, headers) => async ({ cookies, token
 
   const resBody = await parseResponseBody(res)
   if (resBody.login.result !== 'Success') {
+    if (
+      resBody.login.reason == 'Unable to continue login. Your session most likely timed out.'
+    ) {
+      throw error_.new('failed to login: session timed out or no login cookies provided')
+    }
     throw error_.new('failed to login: invalid username/password')
   }
 
diff --git a/node_modules/wikibase-edit/lib/request/post.js b/node_modules/wikibase-edit/lib/request/post.js
index 0af9984..915cfb4 100644
--- a/node_modules/wikibase-edit/lib/request/post.js
+++ b/node_modules/wikibase-edit/lib/request/post.js
@@ -57,7 +57,7 @@ const actionPost = (action, data, config) => authData => {
   if (summary != null) data.summary = data.summary || summary
   if (baserevid != null) data.baserevid = data.baserevid || baserevid
   if (tags != null) data.tags = data.tags || tags.join('|')
-  data.maxlag = maxlag || 5
+  if (maxlag != null) data.maxlag = maxlag || 5
 
   params.body = data
 
